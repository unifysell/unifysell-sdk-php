<?php
/**
 * Position
 *
 * PHP version 5
 *
 * @category Class
 * @package  Unifysell\SDK
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * UnifysellApi
 *
 * The unified endpoint to eCommerce APIs.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@unifysell.de
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Unifysell\SDK\Model;

use \ArrayAccess;
use \Unifysell\SDK\ObjectSerializer;

/**
 * Position Class Doc Comment
 *
 * @category Class
 * @description Object representing a position entity. Positions are part of an order.
 * @package  Unifysell\SDK
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Position implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Position';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'asin' => 'string',
        'cod_fee' => 'string',
        'cod_fee_discount' => 'string',
        'aftertax_position_price' => '\Unifysell\SDK\Model\Money',
        'auction_id' => 'string',
        'bid_id' => 'string',
        'condition_id' => 'string',
        'condition_note' => 'string',
        'condition_subtype_id' => 'string',
        'date_changed' => 'string',
        'date_created' => 'string',
        'ean' => 'string',
        'gift_message_text' => 'string',
        'gift_wrap_level' => 'string',
        'gift_wrap_price' => 'string',
        'gift_wrap_tax' => 'string',
        'hood_order_id_auction_id' => 'string',
        'id' => 'int',
        'invoice_data' => 'string',
        'item_id' => 'string',
        'item_number' => 'string',
        'item_price' => '\Unifysell\SDK\Model\Money',
        'item_tax' => 'string',
        'listing_id' => 'int',
        'mpn' => 'string',
        'name_add' => 'string',
        'order_id' => 'int',
        'order_item_id' => 'string',
        'order_line_item_id' => 'string',
        'points_granted' => 'string',
        'position_type' => 'string',
        'pretax_position_price' => '\Unifysell\SDK\Model\Money',
        'price_designation' => 'string',
        'product_art_no' => 'string',
        'promotion_discount' => 'string',
        'promotion_ids' => 'string',
        'quantity' => 'int',
        'quantity_shipped' => 'int',
        'scheduled_delivery_end_date' => 'string',
        'scheduled_delivery_start_date' => 'string',
        'seller_sku' => 'string',
        'shipping_cost' => '\Unifysell\SDK\Model\Money',
        'shipping_discount' => 'string',
        'shipping_tax' => 'string',
        'sku' => 'string',
        'status' => 'string',
        'tax_percentage' => 'float',
        'title' => 'string',
        'transaction_id' => 'string',
        'transaction_order_id' => 'string',
        'user_case_ids' => 'int[]',
        'variant_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'asin' => null,
        'cod_fee' => null,
        'cod_fee_discount' => null,
        'aftertax_position_price' => null,
        'auction_id' => null,
        'bid_id' => null,
        'condition_id' => null,
        'condition_note' => null,
        'condition_subtype_id' => null,
        'date_changed' => 'datetime',
        'date_created' => 'datetime',
        'ean' => null,
        'gift_message_text' => null,
        'gift_wrap_level' => null,
        'gift_wrap_price' => null,
        'gift_wrap_tax' => null,
        'hood_order_id_auction_id' => null,
        'id' => null,
        'invoice_data' => null,
        'item_id' => null,
        'item_number' => null,
        'item_price' => null,
        'item_tax' => null,
        'listing_id' => null,
        'mpn' => null,
        'name_add' => null,
        'order_id' => null,
        'order_item_id' => null,
        'order_line_item_id' => null,
        'points_granted' => null,
        'position_type' => null,
        'pretax_position_price' => null,
        'price_designation' => null,
        'product_art_no' => null,
        'promotion_discount' => null,
        'promotion_ids' => null,
        'quantity' => null,
        'quantity_shipped' => null,
        'scheduled_delivery_end_date' => null,
        'scheduled_delivery_start_date' => null,
        'seller_sku' => null,
        'shipping_cost' => null,
        'shipping_discount' => null,
        'shipping_tax' => null,
        'sku' => null,
        'status' => null,
        'tax_percentage' => 'float',
        'title' => null,
        'transaction_id' => null,
        'transaction_order_id' => null,
        'user_case_ids' => null,
        'variant_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'asin' => 'ASIN',
        'cod_fee' => 'CODFee',
        'cod_fee_discount' => 'CODFeeDiscount',
        'aftertax_position_price' => 'aftertaxPositionPrice',
        'auction_id' => 'auctionId',
        'bid_id' => 'bidId',
        'condition_id' => 'conditionId',
        'condition_note' => 'conditionNote',
        'condition_subtype_id' => 'conditionSubtypeId',
        'date_changed' => 'dateChanged',
        'date_created' => 'dateCreated',
        'ean' => 'ean',
        'gift_message_text' => 'giftMessageText',
        'gift_wrap_level' => 'giftWrapLevel',
        'gift_wrap_price' => 'giftWrapPrice',
        'gift_wrap_tax' => 'giftWrapTax',
        'hood_order_id_auction_id' => 'hoodOrderIdAuctionId',
        'id' => 'id',
        'invoice_data' => 'invoiceData',
        'item_id' => 'itemId',
        'item_number' => 'itemNumber',
        'item_price' => 'itemPrice',
        'item_tax' => 'itemTax',
        'listing_id' => 'listingId',
        'mpn' => 'mpn',
        'name_add' => 'nameAdd',
        'order_id' => 'orderId',
        'order_item_id' => 'orderItemId',
        'order_line_item_id' => 'orderLineItemId',
        'points_granted' => 'pointsGranted',
        'position_type' => 'positionType',
        'pretax_position_price' => 'pretaxPositionPrice',
        'price_designation' => 'priceDesignation',
        'product_art_no' => 'productArtNo',
        'promotion_discount' => 'promotionDiscount',
        'promotion_ids' => 'promotionIds',
        'quantity' => 'quantity',
        'quantity_shipped' => 'quantityShipped',
        'scheduled_delivery_end_date' => 'scheduledDeliveryEndDate',
        'scheduled_delivery_start_date' => 'scheduledDeliveryStartDate',
        'seller_sku' => 'sellerSKU',
        'shipping_cost' => 'shippingCost',
        'shipping_discount' => 'shippingDiscount',
        'shipping_tax' => 'shippingTax',
        'sku' => 'sku',
        'status' => 'status',
        'tax_percentage' => 'taxPercentage',
        'title' => 'title',
        'transaction_id' => 'transactionId',
        'transaction_order_id' => 'transactionOrderId',
        'user_case_ids' => 'userCaseIds',
        'variant_id' => 'variantId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'asin' => 'setAsin',
        'cod_fee' => 'setCodFee',
        'cod_fee_discount' => 'setCodFeeDiscount',
        'aftertax_position_price' => 'setAftertaxPositionPrice',
        'auction_id' => 'setAuctionId',
        'bid_id' => 'setBidId',
        'condition_id' => 'setConditionId',
        'condition_note' => 'setConditionNote',
        'condition_subtype_id' => 'setConditionSubtypeId',
        'date_changed' => 'setDateChanged',
        'date_created' => 'setDateCreated',
        'ean' => 'setEan',
        'gift_message_text' => 'setGiftMessageText',
        'gift_wrap_level' => 'setGiftWrapLevel',
        'gift_wrap_price' => 'setGiftWrapPrice',
        'gift_wrap_tax' => 'setGiftWrapTax',
        'hood_order_id_auction_id' => 'setHoodOrderIdAuctionId',
        'id' => 'setId',
        'invoice_data' => 'setInvoiceData',
        'item_id' => 'setItemId',
        'item_number' => 'setItemNumber',
        'item_price' => 'setItemPrice',
        'item_tax' => 'setItemTax',
        'listing_id' => 'setListingId',
        'mpn' => 'setMpn',
        'name_add' => 'setNameAdd',
        'order_id' => 'setOrderId',
        'order_item_id' => 'setOrderItemId',
        'order_line_item_id' => 'setOrderLineItemId',
        'points_granted' => 'setPointsGranted',
        'position_type' => 'setPositionType',
        'pretax_position_price' => 'setPretaxPositionPrice',
        'price_designation' => 'setPriceDesignation',
        'product_art_no' => 'setProductArtNo',
        'promotion_discount' => 'setPromotionDiscount',
        'promotion_ids' => 'setPromotionIds',
        'quantity' => 'setQuantity',
        'quantity_shipped' => 'setQuantityShipped',
        'scheduled_delivery_end_date' => 'setScheduledDeliveryEndDate',
        'scheduled_delivery_start_date' => 'setScheduledDeliveryStartDate',
        'seller_sku' => 'setSellerSku',
        'shipping_cost' => 'setShippingCost',
        'shipping_discount' => 'setShippingDiscount',
        'shipping_tax' => 'setShippingTax',
        'sku' => 'setSku',
        'status' => 'setStatus',
        'tax_percentage' => 'setTaxPercentage',
        'title' => 'setTitle',
        'transaction_id' => 'setTransactionId',
        'transaction_order_id' => 'setTransactionOrderId',
        'user_case_ids' => 'setUserCaseIds',
        'variant_id' => 'setVariantId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'asin' => 'getAsin',
        'cod_fee' => 'getCodFee',
        'cod_fee_discount' => 'getCodFeeDiscount',
        'aftertax_position_price' => 'getAftertaxPositionPrice',
        'auction_id' => 'getAuctionId',
        'bid_id' => 'getBidId',
        'condition_id' => 'getConditionId',
        'condition_note' => 'getConditionNote',
        'condition_subtype_id' => 'getConditionSubtypeId',
        'date_changed' => 'getDateChanged',
        'date_created' => 'getDateCreated',
        'ean' => 'getEan',
        'gift_message_text' => 'getGiftMessageText',
        'gift_wrap_level' => 'getGiftWrapLevel',
        'gift_wrap_price' => 'getGiftWrapPrice',
        'gift_wrap_tax' => 'getGiftWrapTax',
        'hood_order_id_auction_id' => 'getHoodOrderIdAuctionId',
        'id' => 'getId',
        'invoice_data' => 'getInvoiceData',
        'item_id' => 'getItemId',
        'item_number' => 'getItemNumber',
        'item_price' => 'getItemPrice',
        'item_tax' => 'getItemTax',
        'listing_id' => 'getListingId',
        'mpn' => 'getMpn',
        'name_add' => 'getNameAdd',
        'order_id' => 'getOrderId',
        'order_item_id' => 'getOrderItemId',
        'order_line_item_id' => 'getOrderLineItemId',
        'points_granted' => 'getPointsGranted',
        'position_type' => 'getPositionType',
        'pretax_position_price' => 'getPretaxPositionPrice',
        'price_designation' => 'getPriceDesignation',
        'product_art_no' => 'getProductArtNo',
        'promotion_discount' => 'getPromotionDiscount',
        'promotion_ids' => 'getPromotionIds',
        'quantity' => 'getQuantity',
        'quantity_shipped' => 'getQuantityShipped',
        'scheduled_delivery_end_date' => 'getScheduledDeliveryEndDate',
        'scheduled_delivery_start_date' => 'getScheduledDeliveryStartDate',
        'seller_sku' => 'getSellerSku',
        'shipping_cost' => 'getShippingCost',
        'shipping_discount' => 'getShippingDiscount',
        'shipping_tax' => 'getShippingTax',
        'sku' => 'getSku',
        'status' => 'getStatus',
        'tax_percentage' => 'getTaxPercentage',
        'title' => 'getTitle',
        'transaction_id' => 'getTransactionId',
        'transaction_order_id' => 'getTransactionOrderId',
        'user_case_ids' => 'getUserCaseIds',
        'variant_id' => 'getVariantId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['asin'] = isset($data['asin']) ? $data['asin'] : null;
        $this->container['cod_fee'] = isset($data['cod_fee']) ? $data['cod_fee'] : null;
        $this->container['cod_fee_discount'] = isset($data['cod_fee_discount']) ? $data['cod_fee_discount'] : null;
        $this->container['aftertax_position_price'] = isset($data['aftertax_position_price']) ? $data['aftertax_position_price'] : null;
        $this->container['auction_id'] = isset($data['auction_id']) ? $data['auction_id'] : null;
        $this->container['bid_id'] = isset($data['bid_id']) ? $data['bid_id'] : null;
        $this->container['condition_id'] = isset($data['condition_id']) ? $data['condition_id'] : null;
        $this->container['condition_note'] = isset($data['condition_note']) ? $data['condition_note'] : null;
        $this->container['condition_subtype_id'] = isset($data['condition_subtype_id']) ? $data['condition_subtype_id'] : null;
        $this->container['date_changed'] = isset($data['date_changed']) ? $data['date_changed'] : null;
        $this->container['date_created'] = isset($data['date_created']) ? $data['date_created'] : null;
        $this->container['ean'] = isset($data['ean']) ? $data['ean'] : null;
        $this->container['gift_message_text'] = isset($data['gift_message_text']) ? $data['gift_message_text'] : null;
        $this->container['gift_wrap_level'] = isset($data['gift_wrap_level']) ? $data['gift_wrap_level'] : null;
        $this->container['gift_wrap_price'] = isset($data['gift_wrap_price']) ? $data['gift_wrap_price'] : null;
        $this->container['gift_wrap_tax'] = isset($data['gift_wrap_tax']) ? $data['gift_wrap_tax'] : null;
        $this->container['hood_order_id_auction_id'] = isset($data['hood_order_id_auction_id']) ? $data['hood_order_id_auction_id'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['invoice_data'] = isset($data['invoice_data']) ? $data['invoice_data'] : null;
        $this->container['item_id'] = isset($data['item_id']) ? $data['item_id'] : null;
        $this->container['item_number'] = isset($data['item_number']) ? $data['item_number'] : null;
        $this->container['item_price'] = isset($data['item_price']) ? $data['item_price'] : null;
        $this->container['item_tax'] = isset($data['item_tax']) ? $data['item_tax'] : null;
        $this->container['listing_id'] = isset($data['listing_id']) ? $data['listing_id'] : null;
        $this->container['mpn'] = isset($data['mpn']) ? $data['mpn'] : null;
        $this->container['name_add'] = isset($data['name_add']) ? $data['name_add'] : null;
        $this->container['order_id'] = isset($data['order_id']) ? $data['order_id'] : null;
        $this->container['order_item_id'] = isset($data['order_item_id']) ? $data['order_item_id'] : null;
        $this->container['order_line_item_id'] = isset($data['order_line_item_id']) ? $data['order_line_item_id'] : null;
        $this->container['points_granted'] = isset($data['points_granted']) ? $data['points_granted'] : null;
        $this->container['position_type'] = isset($data['position_type']) ? $data['position_type'] : null;
        $this->container['pretax_position_price'] = isset($data['pretax_position_price']) ? $data['pretax_position_price'] : null;
        $this->container['price_designation'] = isset($data['price_designation']) ? $data['price_designation'] : null;
        $this->container['product_art_no'] = isset($data['product_art_no']) ? $data['product_art_no'] : null;
        $this->container['promotion_discount'] = isset($data['promotion_discount']) ? $data['promotion_discount'] : null;
        $this->container['promotion_ids'] = isset($data['promotion_ids']) ? $data['promotion_ids'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['quantity_shipped'] = isset($data['quantity_shipped']) ? $data['quantity_shipped'] : null;
        $this->container['scheduled_delivery_end_date'] = isset($data['scheduled_delivery_end_date']) ? $data['scheduled_delivery_end_date'] : null;
        $this->container['scheduled_delivery_start_date'] = isset($data['scheduled_delivery_start_date']) ? $data['scheduled_delivery_start_date'] : null;
        $this->container['seller_sku'] = isset($data['seller_sku']) ? $data['seller_sku'] : null;
        $this->container['shipping_cost'] = isset($data['shipping_cost']) ? $data['shipping_cost'] : null;
        $this->container['shipping_discount'] = isset($data['shipping_discount']) ? $data['shipping_discount'] : null;
        $this->container['shipping_tax'] = isset($data['shipping_tax']) ? $data['shipping_tax'] : null;
        $this->container['sku'] = isset($data['sku']) ? $data['sku'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['tax_percentage'] = isset($data['tax_percentage']) ? $data['tax_percentage'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['transaction_id'] = isset($data['transaction_id']) ? $data['transaction_id'] : null;
        $this->container['transaction_order_id'] = isset($data['transaction_order_id']) ? $data['transaction_order_id'] : null;
        $this->container['user_case_ids'] = isset($data['user_case_ids']) ? $data['user_case_ids'] : null;
        $this->container['variant_id'] = isset($data['variant_id']) ? $data['variant_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets asin
     *
     * @return string
     */
    public function getAsin()
    {
        return $this->container['asin'];
    }

    /**
     * Sets asin
     *
     * @param string $asin Amazon ASIN.
     *
     * @return $this
     */
    public function setAsin($asin)
    {
        $this->container['asin'] = $asin;

        return $this;
    }

    /**
     * Gets cod_fee
     *
     * @return string
     */
    public function getCodFee()
    {
        return $this->container['cod_fee'];
    }

    /**
     * Sets cod_fee
     *
     * @param string $cod_fee Amazon CODFee.
     *
     * @return $this
     */
    public function setCodFee($cod_fee)
    {
        $this->container['cod_fee'] = $cod_fee;

        return $this;
    }

    /**
     * Gets cod_fee_discount
     *
     * @return string
     */
    public function getCodFeeDiscount()
    {
        return $this->container['cod_fee_discount'];
    }

    /**
     * Sets cod_fee_discount
     *
     * @param string $cod_fee_discount Amazon CODFeeDiscount.
     *
     * @return $this
     */
    public function setCodFeeDiscount($cod_fee_discount)
    {
        $this->container['cod_fee_discount'] = $cod_fee_discount;

        return $this;
    }

    /**
     * Gets aftertax_position_price
     *
     * @return \Unifysell\SDK\Model\Money
     */
    public function getAftertaxPositionPrice()
    {
        return $this->container['aftertax_position_price'];
    }

    /**
     * Sets aftertax_position_price
     *
     * @param \Unifysell\SDK\Model\Money $aftertax_position_price aftertax_position_price
     *
     * @return $this
     */
    public function setAftertaxPositionPrice($aftertax_position_price)
    {
        $this->container['aftertax_position_price'] = $aftertax_position_price;

        return $this;
    }

    /**
     * Gets auction_id
     *
     * @return string
     */
    public function getAuctionId()
    {
        return $this->container['auction_id'];
    }

    /**
     * Sets auction_id
     *
     * @param string $auction_id Hood auctionId. Position unique identifier on hood.
     *
     * @return $this
     */
    public function setAuctionId($auction_id)
    {
        $this->container['auction_id'] = $auction_id;

        return $this;
    }

    /**
     * Gets bid_id
     *
     * @return string
     */
    public function getBidId()
    {
        return $this->container['bid_id'];
    }

    /**
     * Sets bid_id
     *
     * @param string $bid_id Ricardo unique identifier of the position.
     *
     * @return $this
     */
    public function setBidId($bid_id)
    {
        $this->container['bid_id'] = $bid_id;

        return $this;
    }

    /**
     * Gets condition_id
     *
     * @return string
     */
    public function getConditionId()
    {
        return $this->container['condition_id'];
    }

    /**
     * Sets condition_id
     *
     * @param string $condition_id Amazon conditionId.
     *
     * @return $this
     */
    public function setConditionId($condition_id)
    {
        $this->container['condition_id'] = $condition_id;

        return $this;
    }

    /**
     * Gets condition_note
     *
     * @return string
     */
    public function getConditionNote()
    {
        return $this->container['condition_note'];
    }

    /**
     * Sets condition_note
     *
     * @param string $condition_note Amazon conditionNote.
     *
     * @return $this
     */
    public function setConditionNote($condition_note)
    {
        $this->container['condition_note'] = $condition_note;

        return $this;
    }

    /**
     * Gets condition_subtype_id
     *
     * @return string
     */
    public function getConditionSubtypeId()
    {
        return $this->container['condition_subtype_id'];
    }

    /**
     * Sets condition_subtype_id
     *
     * @param string $condition_subtype_id Amazon conditionSubtypeId.
     *
     * @return $this
     */
    public function setConditionSubtypeId($condition_subtype_id)
    {
        $this->container['condition_subtype_id'] = $condition_subtype_id;

        return $this;
    }

    /**
     * Gets date_changed
     *
     * @return string
     */
    public function getDateChanged()
    {
        return $this->container['date_changed'];
    }

    /**
     * Sets date_changed
     *
     * @param string $date_changed Timestamp of the latest update to the listing.
     *
     * @return $this
     */
    public function setDateChanged($date_changed)
    {
        $this->container['date_changed'] = $date_changed;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return string
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param string $date_created Timestamp of creation of the listing.
     *
     * @return $this
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets ean
     *
     * @return string
     */
    public function getEan()
    {
        return $this->container['ean'];
    }

    /**
     * Sets ean
     *
     * @param string $ean Hood ean.
     *
     * @return $this
     */
    public function setEan($ean)
    {
        $this->container['ean'] = $ean;

        return $this;
    }

    /**
     * Gets gift_message_text
     *
     * @return string
     */
    public function getGiftMessageText()
    {
        return $this->container['gift_message_text'];
    }

    /**
     * Sets gift_message_text
     *
     * @param string $gift_message_text Amazon giftMessageText.
     *
     * @return $this
     */
    public function setGiftMessageText($gift_message_text)
    {
        $this->container['gift_message_text'] = $gift_message_text;

        return $this;
    }

    /**
     * Gets gift_wrap_level
     *
     * @return string
     */
    public function getGiftWrapLevel()
    {
        return $this->container['gift_wrap_level'];
    }

    /**
     * Sets gift_wrap_level
     *
     * @param string $gift_wrap_level Amazon giftWrapLevel.
     *
     * @return $this
     */
    public function setGiftWrapLevel($gift_wrap_level)
    {
        $this->container['gift_wrap_level'] = $gift_wrap_level;

        return $this;
    }

    /**
     * Gets gift_wrap_price
     *
     * @return string
     */
    public function getGiftWrapPrice()
    {
        return $this->container['gift_wrap_price'];
    }

    /**
     * Sets gift_wrap_price
     *
     * @param string $gift_wrap_price Amazon giftWrapPrice.
     *
     * @return $this
     */
    public function setGiftWrapPrice($gift_wrap_price)
    {
        $this->container['gift_wrap_price'] = $gift_wrap_price;

        return $this;
    }

    /**
     * Gets gift_wrap_tax
     *
     * @return string
     */
    public function getGiftWrapTax()
    {
        return $this->container['gift_wrap_tax'];
    }

    /**
     * Sets gift_wrap_tax
     *
     * @param string $gift_wrap_tax Amazon giftWrapTax.
     *
     * @return $this
     */
    public function setGiftWrapTax($gift_wrap_tax)
    {
        $this->container['gift_wrap_tax'] = $gift_wrap_tax;

        return $this;
    }

    /**
     * Gets hood_order_id_auction_id
     *
     * @return string
     */
    public function getHoodOrderIdAuctionId()
    {
        return $this->container['hood_order_id_auction_id'];
    }

    /**
     * Sets hood_order_id_auction_id
     *
     * @param string $hood_order_id_auction_id Hood hoodOrderIdAuctionId.
     *
     * @return $this
     */
    public function setHoodOrderIdAuctionId($hood_order_id_auction_id)
    {
        $this->container['hood_order_id_auction_id'] = $hood_order_id_auction_id;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id The unique identifier.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets invoice_data
     *
     * @return string
     */
    public function getInvoiceData()
    {
        return $this->container['invoice_data'];
    }

    /**
     * Sets invoice_data
     *
     * @param string $invoice_data Amazon invoiceData.
     *
     * @return $this
     */
    public function setInvoiceData($invoice_data)
    {
        $this->container['invoice_data'] = $invoice_data;

        return $this;
    }

    /**
     * Gets item_id
     *
     * @return string
     */
    public function getItemId()
    {
        return $this->container['item_id'];
    }

    /**
     * Sets item_id
     *
     * @param string $item_id Magento and Rakuten unique identifier of the position.
     *
     * @return $this
     */
    public function setItemId($item_id)
    {
        $this->container['item_id'] = $item_id;

        return $this;
    }

    /**
     * Gets item_number
     *
     * @return string
     */
    public function getItemNumber()
    {
        return $this->container['item_number'];
    }

    /**
     * Sets item_number
     *
     * @param string $item_number Hood itemNumber. Identifier of the hood item.
     *
     * @return $this
     */
    public function setItemNumber($item_number)
    {
        $this->container['item_number'] = $item_number;

        return $this;
    }

    /**
     * Gets item_price
     *
     * @return \Unifysell\SDK\Model\Money
     */
    public function getItemPrice()
    {
        return $this->container['item_price'];
    }

    /**
     * Sets item_price
     *
     * @param \Unifysell\SDK\Model\Money $item_price item_price
     *
     * @return $this
     */
    public function setItemPrice($item_price)
    {
        $this->container['item_price'] = $item_price;

        return $this;
    }

    /**
     * Gets item_tax
     *
     * @return string
     */
    public function getItemTax()
    {
        return $this->container['item_tax'];
    }

    /**
     * Sets item_tax
     *
     * @param string $item_tax Amazon itemTax.
     *
     * @return $this
     */
    public function setItemTax($item_tax)
    {
        $this->container['item_tax'] = $item_tax;

        return $this;
    }

    /**
     * Gets listing_id
     *
     * @return int
     */
    public function getListingId()
    {
        return $this->container['listing_id'];
    }

    /**
     * Sets listing_id
     *
     * @param int $listing_id The product (listings) id ordered in the position.
     *
     * @return $this
     */
    public function setListingId($listing_id)
    {
        $this->container['listing_id'] = $listing_id;

        return $this;
    }

    /**
     * Gets mpn
     *
     * @return string
     */
    public function getMpn()
    {
        return $this->container['mpn'];
    }

    /**
     * Sets mpn
     *
     * @param string $mpn Hood mpn.
     *
     * @return $this
     */
    public function setMpn($mpn)
    {
        $this->container['mpn'] = $mpn;

        return $this;
    }

    /**
     * Gets name_add
     *
     * @return string
     */
    public function getNameAdd()
    {
        return $this->container['name_add'];
    }

    /**
     * Sets name_add
     *
     * @param string $name_add Rakuten nameAdd.
     *
     * @return $this
     */
    public function setNameAdd($name_add)
    {
        $this->container['name_add'] = $name_add;

        return $this;
    }

    /**
     * Gets order_id
     *
     * @return int
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param int $order_id The id of the referenced order the position belongs to.
     *
     * @return $this
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets order_item_id
     *
     * @return string
     */
    public function getOrderItemId()
    {
        return $this->container['order_item_id'];
    }

    /**
     * Sets order_item_id
     *
     * @param string $order_item_id Amazon orderItemId.
     *
     * @return $this
     */
    public function setOrderItemId($order_item_id)
    {
        $this->container['order_item_id'] = $order_item_id;

        return $this;
    }

    /**
     * Gets order_line_item_id
     *
     * @return string
     */
    public function getOrderLineItemId()
    {
        return $this->container['order_line_item_id'];
    }

    /**
     * Sets order_line_item_id
     *
     * @param string $order_line_item_id orderLineItemId, for ebay orders. Unique identifier on ebay.
     *
     * @return $this
     */
    public function setOrderLineItemId($order_line_item_id)
    {
        $this->container['order_line_item_id'] = $order_line_item_id;

        return $this;
    }

    /**
     * Gets points_granted
     *
     * @return string
     */
    public function getPointsGranted()
    {
        return $this->container['points_granted'];
    }

    /**
     * Sets points_granted
     *
     * @param string $points_granted Amazon pointsGranted.
     *
     * @return $this
     */
    public function setPointsGranted($points_granted)
    {
        $this->container['points_granted'] = $points_granted;

        return $this;
    }

    /**
     * Gets position_type
     *
     * @return string
     */
    public function getPositionType()
    {
        return $this->container['position_type'];
    }

    /**
     * Sets position_type
     *
     * @param string $position_type Tells if it is an item (product) or a discount.
     *
     * @return $this
     */
    public function setPositionType($position_type)
    {
        $this->container['position_type'] = $position_type;

        return $this;
    }

    /**
     * Gets pretax_position_price
     *
     * @return \Unifysell\SDK\Model\Money
     */
    public function getPretaxPositionPrice()
    {
        return $this->container['pretax_position_price'];
    }

    /**
     * Sets pretax_position_price
     *
     * @param \Unifysell\SDK\Model\Money $pretax_position_price pretax_position_price
     *
     * @return $this
     */
    public function setPretaxPositionPrice($pretax_position_price)
    {
        $this->container['pretax_position_price'] = $pretax_position_price;

        return $this;
    }

    /**
     * Gets price_designation
     *
     * @return string
     */
    public function getPriceDesignation()
    {
        return $this->container['price_designation'];
    }

    /**
     * Sets price_designation
     *
     * @param string $price_designation Amazon priceDesignation.
     *
     * @return $this
     */
    public function setPriceDesignation($price_designation)
    {
        $this->container['price_designation'] = $price_designation;

        return $this;
    }

    /**
     * Gets product_art_no
     *
     * @return string
     */
    public function getProductArtNo()
    {
        return $this->container['product_art_no'];
    }

    /**
     * Sets product_art_no
     *
     * @param string $product_art_no Rakuten productArtNo. Rakuten unique identifier.
     *
     * @return $this
     */
    public function setProductArtNo($product_art_no)
    {
        $this->container['product_art_no'] = $product_art_no;

        return $this;
    }

    /**
     * Gets promotion_discount
     *
     * @return string
     */
    public function getPromotionDiscount()
    {
        return $this->container['promotion_discount'];
    }

    /**
     * Sets promotion_discount
     *
     * @param string $promotion_discount Amazon promotionDiscount.
     *
     * @return $this
     */
    public function setPromotionDiscount($promotion_discount)
    {
        $this->container['promotion_discount'] = $promotion_discount;

        return $this;
    }

    /**
     * Gets promotion_ids
     *
     * @return string
     */
    public function getPromotionIds()
    {
        return $this->container['promotion_ids'];
    }

    /**
     * Sets promotion_ids
     *
     * @param string $promotion_ids Amazon promotionIds.
     *
     * @return $this
     */
    public function setPromotionIds($promotion_ids)
    {
        $this->container['promotion_ids'] = $promotion_ids;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int $quantity Number of items in the position.
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets quantity_shipped
     *
     * @return int
     */
    public function getQuantityShipped()
    {
        return $this->container['quantity_shipped'];
    }

    /**
     * Sets quantity_shipped
     *
     * @param int $quantity_shipped Amazon quantityShipped. Tells the amount of items already shipped.
     *
     * @return $this
     */
    public function setQuantityShipped($quantity_shipped)
    {
        $this->container['quantity_shipped'] = $quantity_shipped;

        return $this;
    }

    /**
     * Gets scheduled_delivery_end_date
     *
     * @return string
     */
    public function getScheduledDeliveryEndDate()
    {
        return $this->container['scheduled_delivery_end_date'];
    }

    /**
     * Sets scheduled_delivery_end_date
     *
     * @param string $scheduled_delivery_end_date Amazon scheduledDeliveryEndDate.
     *
     * @return $this
     */
    public function setScheduledDeliveryEndDate($scheduled_delivery_end_date)
    {
        $this->container['scheduled_delivery_end_date'] = $scheduled_delivery_end_date;

        return $this;
    }

    /**
     * Gets scheduled_delivery_start_date
     *
     * @return string
     */
    public function getScheduledDeliveryStartDate()
    {
        return $this->container['scheduled_delivery_start_date'];
    }

    /**
     * Sets scheduled_delivery_start_date
     *
     * @param string $scheduled_delivery_start_date Amazon scheduledDeliveryStartDate.
     *
     * @return $this
     */
    public function setScheduledDeliveryStartDate($scheduled_delivery_start_date)
    {
        $this->container['scheduled_delivery_start_date'] = $scheduled_delivery_start_date;

        return $this;
    }

    /**
     * Gets seller_sku
     *
     * @return string
     */
    public function getSellerSku()
    {
        return $this->container['seller_sku'];
    }

    /**
     * Sets seller_sku
     *
     * @param string $seller_sku Amazon sellerSKU.
     *
     * @return $this
     */
    public function setSellerSku($seller_sku)
    {
        $this->container['seller_sku'] = $seller_sku;

        return $this;
    }

    /**
     * Gets shipping_cost
     *
     * @return \Unifysell\SDK\Model\Money
     */
    public function getShippingCost()
    {
        return $this->container['shipping_cost'];
    }

    /**
     * Sets shipping_cost
     *
     * @param \Unifysell\SDK\Model\Money $shipping_cost shipping_cost
     *
     * @return $this
     */
    public function setShippingCost($shipping_cost)
    {
        $this->container['shipping_cost'] = $shipping_cost;

        return $this;
    }

    /**
     * Gets shipping_discount
     *
     * @return string
     */
    public function getShippingDiscount()
    {
        return $this->container['shipping_discount'];
    }

    /**
     * Sets shipping_discount
     *
     * @param string $shipping_discount Amazon shippingDiscount.
     *
     * @return $this
     */
    public function setShippingDiscount($shipping_discount)
    {
        $this->container['shipping_discount'] = $shipping_discount;

        return $this;
    }

    /**
     * Gets shipping_tax
     *
     * @return string
     */
    public function getShippingTax()
    {
        return $this->container['shipping_tax'];
    }

    /**
     * Sets shipping_tax
     *
     * @param string $shipping_tax Amazon shippingTax.
     *
     * @return $this
     */
    public function setShippingTax($shipping_tax)
    {
        $this->container['shipping_tax'] = $shipping_tax;

        return $this;
    }

    /**
     * Gets sku
     *
     * @return string
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     *
     * @param string $sku A platform identifier.
     *
     * @return $this
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status, for ebay orders.
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets tax_percentage
     *
     * @return float
     */
    public function getTaxPercentage()
    {
        return $this->container['tax_percentage'];
    }

    /**
     * Sets tax_percentage
     *
     * @param float $tax_percentage Tax amount of the positions price.
     *
     * @return $this
     */
    public function setTaxPercentage($tax_percentage)
    {
        $this->container['tax_percentage'] = $tax_percentage;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title The name of the position.
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets transaction_id
     *
     * @return string
     */
    public function getTransactionId()
    {
        return $this->container['transaction_id'];
    }

    /**
     * Sets transaction_id
     *
     * @param string $transaction_id transactionId, for ebay orders.
     *
     * @return $this
     */
    public function setTransactionId($transaction_id)
    {
        $this->container['transaction_id'] = $transaction_id;

        return $this;
    }

    /**
     * Gets transaction_order_id
     *
     * @return string
     */
    public function getTransactionOrderId()
    {
        return $this->container['transaction_order_id'];
    }

    /**
     * Sets transaction_order_id
     *
     * @param string $transaction_order_id transactionOrderId, for ebay orders.
     *
     * @return $this
     */
    public function setTransactionOrderId($transaction_order_id)
    {
        $this->container['transaction_order_id'] = $transaction_order_id;

        return $this;
    }

    /**
     * Gets user_case_ids
     *
     * @return int[]
     */
    public function getUserCaseIds()
    {
        return $this->container['user_case_ids'];
    }

    /**
     * Sets user_case_ids
     *
     * @param int[] $user_case_ids The id of a case that was opened for the order position.
     *
     * @return $this
     */
    public function setUserCaseIds($user_case_ids)
    {
        $this->container['user_case_ids'] = $user_case_ids;

        return $this;
    }

    /**
     * Gets variant_id
     *
     * @return string
     */
    public function getVariantId()
    {
        return $this->container['variant_id'];
    }

    /**
     * Sets variant_id
     *
     * @param string $variant_id Rakuten variantId. For similar lisitings with smaller differences.
     *
     * @return $this
     */
    public function setVariantId($variant_id)
    {
        $this->container['variant_id'] = $variant_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


